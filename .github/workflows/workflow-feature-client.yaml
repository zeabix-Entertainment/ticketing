# kaitest12
name: DEV_ticketing-client_client

on:
  push:
    branches:
      - feature-*
jobs:

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
 
  Trivy:
    name: Trivy 
    runs-on: ubuntu-18.04
    steps:
      - name: Prepare
        id: Prepare
        run: |
          echo $WORKFLOW_NAME
          strarr=(${WORKFLOW_NAME//"_"/ })
          echo "APP_ENV : ${strarr[0]} "  
          echo "APP_NAME : ${strarr[1]}" 
          echo "APP_DIR : ${strarr[2]} "  
          echo "APP_ENV=${strarr[0]}" >> $GITHUB_ENV
          echo "APP_NAME=${strarr[1]}" >> $GITHUB_ENV
          echo "APP_DIR=${strarr[2]}" >> $GITHUB_ENV
        env:
          WORKFLOW_NAME: ${{github.workflow}}

      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Build an image from Dockerfile
        run: |

          cd $APP_DIR && docker build -t zeabixdockerrepo/$APP_NAME:${{ github.sha }} .
     
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'zeabixdockerrepo/${{env.APP_NAME}}:${{ github.sha }}'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: false
          vuln-type: 'os,library'
          severity: 'UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL'

  build:
    uses: ./.github/workflows/build-master.yaml
    with: 
      workflow_name: ${{github.workflow}}
    secrets:
      docker_username: ${{ secrets.DOCKER_USERNAME }}
      docker_password: ${{ secrets.DOCKER_PASSWORD }}

  deploy:
    needs: build
    uses: ./.github/workflows/deploy-master.yaml
    with:
      workflow_name: ${{github.workflow}}
      docker_tag: ${{needs.build.outputs.docker_tag}}
  
    secrets:
      docker_username: ${{ secrets.DOCKER_USERNAME }}
      docker_password: ${{ secrets.DOCKER_PASSWORD }}
      creds:  '${{ secrets.AZURE_CREDENTIALS_DEV }}'
      cluster-name: ${{ secrets.CLUSTER_NAME_DEV }}
      resource-group: ${{ secrets.CLUSTER_RESOURCE_GROUP_DEV }}


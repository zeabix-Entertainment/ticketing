# First install only injector agent on kube that run apps needed to access (external) Vault. 
# See section: Install the Vault Helm chart configured to address an external Vault
# https://learn.hashicorp.com/tutorials/vault/kubernetes-external-vault?in=vault/kubernetes


# 1. Apply external service linked to hostname of Vault
kubectl apply -f ./external-vault.yaml 

# 2. Install the Vault Helm chart only vault injector agent
helm repo add hashicorp https://helm.releases.hashicorp.com
helm repo update
helm install vault hashicorp/vault --set "injector.externalVaultAddr=http://external-vault:8200"

# The Helm chart creates the vault service account. The service account secret is necessary to configure Vault's Kubernetes auth method.

# 3. Verify agent injector pod
kubectl get pod

# 4. Get secret name of serviceaccount (vault)
VAULT_HELM_SECRET_NAME=$(kubectl get secrets --output=json | jq -r '.items[].metadata | select(.name|startswith("vault-token-")).name')

# 5. enable authentication method of kubernetes
vault auth enable kubernetes
TOKEN_REVIEW_JWT=$(kubectl get secret $VAULT_HELM_SECRET_NAME --output='go-template={{ .data.token }}' | base64 --decode)
KUBE_CA_CERT=$(kubectl config view --raw --minify --flatten --output='jsonpath={.clusters[].cluster.certificate-authority-data}' | base64 --decode)

vault write auth/kubernetes/config \
        token_reviewer_jwt="$TOKEN_REVIEW_JWT" \
        kubernetes_host=91397d8c-0c80-46c0-90f2-347a992ef72d.k8s.ondigitalocean.com \
        kubernetes_ca_cert="$KUBE_CA_CERT" \
        issuer="https://kubernetes.default.svc.cluster.local"

# 6. Create policy 
vault policy write devwebapp - <<EOF
path "secret/data/devwebapp/config" {
  capabilities = ["read"]
}
EOF

# 7. Create role (this role will map to serviceaccount internal-app)
vault write auth/kubernetes/role/devweb-app \
        bound_service_account_names=internal-app \
        bound_service_account_namespaces=default \
        policies=devwebapp \
        ttl=24h
# serviceaccount "internal-app must be defined in pod mantifest yaml.

# 8. Create secret 
vault secrets enable -path=secret kv
vault kv put secret/devwebapp/config username='giraffe' password='salsa'

# 9. create serviceaccount for POD
kubectl create sa internal-app

# 10. Create App Demo with annotations.
kubectl apply --filename pod-devwebapp-with-annotations.yaml






# Reference: https://learn.hashicorp.com/tutorials/vault/kubernetes-sidecar

